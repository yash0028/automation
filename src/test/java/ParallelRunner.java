import courgette.api.CourgetteAfterAll;
import courgette.api.CourgetteBeforeAll;
import courgette.api.CourgetteOptions;
import courgette.api.CourgetteRunLevel;
import courgette.api.junit.Courgette;
import cucumber.api.CucumberOptions;
import ui_test.util.*;

import org.junit.runner.RunWith;

/**
 * DO NOT EDIT THIS FILE.
 * Do not use this file to run tests. This framework is designed to be run using gradle, which manages all the dependencies.
 * <p>
 * Instead, execute tests using the following command:
 * <p>
 * ./gradlew parallelTest -Dcucumber.tags="@tags and @moreTags" -Dcourgette.threads=100
 */

@RunWith(Courgette.class)
@CourgetteOptions(
        threads = 1,
        // SCENARIO run level has shown to run faster than FEATURE
        runLevel = CourgetteRunLevel.FEATURE,
        rerunFailedScenarios = false,
        rerunAttempts = 1,
        showTestOutput = true,
        reportTargetDir = "build",
        cucumberOptions = @CucumberOptions(
                features = "src/test/resources/features",
                plugin = {
                        "pretty",
                        "json:build/json-reports/json-report.json",
                        "json:build/cucumber-report/cucumber.json",
                        "html:build/cucumber-report/cucumber.html",
                        "junit:build/cucumber-report/cucumber.xml"},
                        glue = {"general_test", "rest_api_test", "ui_test", "exari_test"},
                tags = {"@Murty2"},
                strict = true
        ))
public class ParallelRunner {
	 @CourgetteBeforeAll
	    public static void setUp() {
	        System.out.println("I will run before any tests execute");
	        ResultsLib.fncreateReportfolder();
	    }
	    
	    @CourgetteAfterAll
	    public static void tearDown() {
	        System.out.println("I will run after all of the tests execute");
	        ResultsLib.updateTestSummary();
	    }
}

